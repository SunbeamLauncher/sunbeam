import{_ as i,c as a,a2 as t,o as n}from"./chunks/framework.BQmytedh.js";const c=JSON.parse('{"title":"Tips","description":"","frontmatter":{},"headers":[],"relativePath":"docs/developer-guide/tips.md","filePath":"docs/developer-guide/tips.md"}'),e={name:"docs/developer-guide/tips.md"};function l(p,s,h,o,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h1><h2 id="non-interactive-mode" tabindex="-1">Non Interactive Mode <a class="header-anchor" href="#non-interactive-mode" aria-label="Permalink to &quot;Non Interactive Mode&quot;">​</a></h2><p>When the stdin or stdout is not a tty, sunbeam will adapt it&#39;s behavior:</p><ul><li><p>If stdin is not a tty, sunbeam will try to read i&#39;s input from stdin. It allows you to pipe the sunbeam payload instead of using positional arguments.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{ command: &quot;list-docsets&quot; } | sunbeam devdocs</span></span></code></pre></div></li><li><p>If stdout is not a tty, sunbeam will output the result as a JSON string. It allows you to pipe the result to another program.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># print the config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sunbeam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># print the manifest of the devdocs extension</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devdocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># print the json representation of the go entries</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devdocs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-entries</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --slug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span></span></code></pre></div></li></ul><p>You can combine both to create a pipeline:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{ command: &quot;list-docsets&quot; }&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devdocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span></span></code></pre></div><h2 id="extension-validation" tabindex="-1">Extension Validation <a class="header-anchor" href="#extension-validation" aria-label="Permalink to &quot;Extension Validation&quot;">​</a></h2><p>The sunbeam validate command allows you to validate the config file, the manifest of an extension, or the output of a command.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./devdocs.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manifest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devdocs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-docsets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sunbeam</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>You can use those commands to validate an extension in a CI pipeline.</p><h2 id="workspace-structure" tabindex="-1">Workspace Structure <a class="header-anchor" href="#workspace-structure" aria-label="Permalink to &quot;Workspace Structure&quot;">​</a></h2><p>You are free to store your local extensions anywhere you want. I personally store them directly in the sunbeam config directory.</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>~/.config/sunbeam/</span></span>
<span class="line"><span>├── sunbeam.json</span></span>
<span class="line"><span>└── extensions/</span></span>
<span class="line"><span>    ├── devdocs.sh</span></span>
<span class="line"><span>    └── github.ts</span></span></code></pre></div><p>And then reference them in the config file using relative paths:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;extensions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;devdocs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;origin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./extensions/devdocs.sh&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;github&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;origin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./extensions/github.ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="additional-tools" tabindex="-1">Additional Tools <a class="header-anchor" href="#additional-tools" aria-label="Permalink to &quot;Additional Tools&quot;">​</a></h2><p>Sunbeam pages are described using JSON, so it pairs really well with other JSON tools:</p><ul><li><a href="https://github.com/jqlang/jq" target="_blank" rel="noreferrer">jq</a> - a lightweight and flexible command-line JSON processor</li><li><a href="https://github.com/kellyjonbrazil/jc" target="_blank" rel="noreferrer">jc</a> - a command line utility to convert the output of popular command-line tools and file-types to JSON</li><li><a href="https://github.com/ericchiang/pup" target="_blank" rel="noreferrer">pup</a> - a command line tool for processing HTML, can be used to extract data from HTML pages and convert it to JSON</li><li><a href="https://github.com/jpmens/jo" target="_blank" rel="noreferrer">jo</a> - a command line utility to create JSON objects</li><li><a href="https://github.com/dimo414/bkt" target="_blank" rel="noreferrer">bkt</a> - a caching tool for for subprocess output</li></ul>`,18)]))}const u=i(e,[["render",l]]);export{c as __pageData,u as default};
